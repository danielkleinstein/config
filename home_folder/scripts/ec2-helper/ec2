#!/usr/bin/env python3

import argparse
import boto3
import os
import sys

from terraform_manager.instance_configuration import instance_configuration
from terraform_manager.manager_connect import connect_instance_configuration_folder
from terraform_manager.manager_create import create_instance_configuration_folder
from terraform_manager.manager_destroy import destroy_instance_configuration_folder


script_dir = os.path.dirname(os.path.abspath(__file__))
os.chdir(script_dir)


def aws_account_id() -> str:
    session = boto3.session.Session()
    sts_client = session.client('sts')
    return sts_client.get_caller_identity()['Account']


def create(args):
    name = args.name
    instance_config = instance_configuration()
    account_id = aws_account_id()
    create_instance_configuration_folder(name, account_id, instance_config)


def connect(args):
    name = args.name
    connect_instance_configuration_folder(name)


def list_configs(args):
    pass


def destroy(args):
    name = args.name
    destroy_instance_configuration_folder(name)


def main():
    parser = argparse.ArgumentParser(description="CLI for managing AWS instances.")

    subparsers = parser.add_subparsers()

    # Subparser for the 'create' command
    create_parser = subparsers.add_parser('create', help="Create a new instance configuration.")
    create_parser.add_argument('name', type=str, help="Enter a unique name.")
    create_parser.set_defaults(func=create)

    # Subparser for the 'connect' command
    connect_parser = subparsers.add_parser('connect', help="Connect to an instance.")
    connect_parser.add_argument('name', type=str, help="Enter the name of an instance created with the create command.")
    connect_parser.set_defaults(func=connect)

    # Subparser for the 'list' command
    list_parser = subparsers.add_parser('list', help="List all instance configurations.")
    list_parser.set_defaults(func=list_configs)

    # Subparser for the 'destroy' command
    destroy_parser = subparsers.add_parser('destroy', help="Destroy an instance configuration.")
    destroy_parser.add_argument('name', type=str, help="Enter the name of an instance created with the create command.")
    destroy_parser.set_defaults(func=destroy)

    if len(sys.argv) == 1:
        parser.print_help()
        sys.exit(1)

    args = parser.parse_args()
    args.func(args)


if __name__ == '__main__':
    main()
